animations {
    // Uncomment to turn off all animations.
    // off

    // Slow down all animations by this factor. Values below 1 speed them up instead.
    // slowdown 3.0

    workspace-switch {
      off
    }

}

binds {
    // Keys consist of modifiers separated by + signs, followed by an XKB key name
    // in the end. To find an XKB name for a particular key, you may use a program
    // like wev.
    //
    // "Mod" is a special modifier equal to Super when running on a TTY, and to Alt
    // when running as a winit window.
    //
    // Most actions that you can bind here can also be invoked programmatically with
    // `niri msg action do-something`.

    // Mod-Shift-/, which is usually the same as Mod-?,
    // shows a list of important hotkeys.
    Mod+Shift+Slash { show-hotkey-overlay; }

    // Suggested binds for running programs: terminal, app launcher, screen locker.
    Mod+Return hotkey-overlay-title="Open a Terminal" { spawn "kitty"; }
    Mod+Space hotkey-overlay-title="Vicinae" { spawn "vicinae"; }
    Mod+Slash hotkey-overlay-title="Open 1password" { spawn "1password"; }
    Mod+Shift+E hotkey-overlay-title="Open file explorer" { spawn "nautilus"; }
    Mod+D hotkey-overlay-title="Run an Application: fuzzel" { spawn "fuzzel"; }
    Mod+Shift+B hotkey-overlay-title="Run Chromium" { spawn "chromium"; }
    Mod+Shift+D hotkey-overlay-title="Load Calendar" { spawn "chromium" "--app=https://calendar.google.com/calendar/u/1/r"; }
    Mod+Shift+F hotkey-overlay-title="Load Email" { spawn "chromium" "--app=https://app.fastmail.com/mail/Inbox/"; }
    Mod+Shift+H hotkey-overlay-title="Load HelpScout" { spawn "chromium" "--app=https://secure.helpscout.net/inboxes/ca9f1c7108512ae1/views/8176762"; }
    Mod+Shift+L hotkey-overlay-title="Load Linear" { spawn "chromium" "--app=https://linear.app/rightmessage/view/active-issues-3ce931976036"; }
    Mod+Shift+C hotkey-overlay-title="Load WhatsApp" { spawn "chromium" "--app=http://web.whatsapp.com"; }
    Mod+Shift+T hotkey-overlay-title="Load Todoist" { spawn "chromium" "--app=https://app.todoist.com/app/inbox"; }


// bindd = SUPER, R, RightMessage, exec, omarchy-launch-webapp "https://app.rightmessage.com/"
// bindd = SUPER, T, Todoist, exec, omarchy-launch-webapp "https://app.todoist.com/app/inbox"


    Super+Alt+L hotkey-overlay-title="Lock the Screen: swaylock" { spawn "swaylock"; }

    // Use spawn-sh to run a shell command. Do this if you need pipes, multiple commands, etc.
    // Note: the entire command goes as a single argument. It's passed verbatim to `sh -c`.
    // For example, this is a standard bind to toggle the screen reader (orca).
    Super+Alt+S allow-when-locked=true hotkey-overlay-title=null { spawn-sh "pkill orca || exec orca"; }

    // Example volume keys mappings for PipeWire & WirePlumber.
    // The allow-when-locked=true property makes them work even when the session is locked.
    // Using spawn-sh allows to pass multiple arguments together with the command.
    // XF86AudioRaiseVolume allow-when-locked=true { spawn-sh "wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.1+"; }
    // XF86AudioLowerVolume allow-when-locked=true { spawn-sh "wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.1-"; }
    // XF86AudioMute        allow-when-locked=true { spawn-sh "wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle"; }
    // XF86AudioMicMute     allow-when-locked=true { spawn-sh "wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle"; }

    XF86AudioRaiseVolume allow-when-locked=true { spawn-sh "swayosd-client --output-volume raise"; }
    XF86AudioLowerVolume allow-when-locked=true { spawn-sh "swayosd-client --output-volume lower"; }
    XF86AudioMute        allow-when-locked=true { spawn-sh "swayosd-client --output-volume mute-toggle"; }
    XF86AudioMicMute     allow-when-locked=true { spawn-sh "swayosd-client --input-volume mute-toggle"; }


    // Example brightness key mappings for brightnessctl.
    // You can use regular spawn with multiple arguments too (to avoid going through "sh"), but you need to manually put each argument in separate "" quotes.

    XF86MonBrightnessUp allow-when-locked=true { spawn-sh "swayosd-client --brightness raise"; }
    XF86MonBrightnessDown allow-when-locked=true { spawn-sh "swayosd-client --brightness lower"; }

    Mod+G { spawn "swaync-client" "-t" "-sw"; }

    // Open/close the Overview: a zoomed-out view of workspaces and windows.
    // You can also move the mouse into the top-left hot corner,
    // or do a four-finger swipe up on a touchpad.
    Mod+O repeat=false { toggle-overview; }

    Mod+W repeat=false { close-window; }

    Mod+Left  { focus-column-left; }
    Mod+Down  { focus-window-down; }
    Mod+Up    { focus-window-up; }
    Mod+Right { focus-column-right; }
    Mod+H     { focus-column-left; }
    Mod+J     { focus-window-down; }
    Mod+K     { focus-window-up; }
    Mod+L     { focus-column-right; }

    Mod+Ctrl+Left  { move-column-left; }
    Mod+Ctrl+Down  { move-window-down; }
    Mod+Ctrl+Up    { move-window-up; }
    Mod+Ctrl+Right { move-column-right; }
    Mod+Ctrl+H     { move-column-left; }
    Mod+Ctrl+J     { move-window-down; }
    Mod+Ctrl+K     { move-window-up; }
    Mod+Ctrl+L     { move-column-right; }

    // Alternative commands that move across workspaces when reaching
    // the first or last window in a column.
    // Mod+J     { focus-window-or-workspace-down; }
    // Mod+K     { focus-window-or-workspace-up; }
    // Mod+Ctrl+J     { move-window-down-or-to-workspace-down; }
    // Mod+Ctrl+K     { move-window-up-or-to-workspace-up; }

    Mod+Home { focus-column-first; }
    Mod+N { focus-column-first; }
    Mod+End  { focus-column-last; }
    Mod+M  { focus-column-last; }
    Mod+Ctrl+Home { move-column-to-first; }
    Mod+Ctrl+End  { move-column-to-last; }

    // Mod+Shift+Left  { focus-monitor-left; }
    // Mod+Shift+Down  { focus-monitor-down; }
    // Mod+Shift+Up    { focus-monitor-up; }
    // Mod+Shift+Right { focus-monitor-right; }
    // Mod+Shift+H     { focus-monitor-left; }
    // Mod+Shift+J     { focus-monitor-down; }
    // Mod+Shift+K     { focus-monitor-up; }
    // Mod+Shift+L     { focus-monitor-right; }
    //
    // Mod+Shift+Ctrl+Left  { move-column-to-monitor-left; }
    // Mod+Shift+Ctrl+Down  { move-column-to-monitor-down; }
    // Mod+Shift+Ctrl+Up    { move-column-to-monitor-up; }
    // Mod+Shift+Ctrl+Right { move-column-to-monitor-right; }
    // Mod+Shift+Ctrl+H     { move-column-to-monitor-left; }
    // Mod+Shift+Ctrl+J     { move-column-to-monitor-down; }
    // Mod+Shift+Ctrl+K     { move-column-to-monitor-up; }
    // Mod+Shift+Ctrl+L     { move-column-to-monitor-right; }

    // Alternatively, there are commands to move just a single window:
    // Mod+Shift+Ctrl+Left  { move-window-to-monitor-left; }
    // ...

    // And you can also move a whole workspace to another monitor:
    // Mod+Shift+Ctrl+Left  { move-workspace-to-monitor-left; }
    // ...

    Mod+Page_Down      { focus-workspace-down; }
    Mod+Page_Up        { focus-workspace-up; }
    Mod+U              { focus-workspace-down; }
    Mod+I              { focus-workspace-up; }
    Mod+Ctrl+U         { move-column-to-workspace-down; }
    Mod+Ctrl+I         { move-column-to-workspace-up; }

    // Alternatively, there are commands to move just a single window:
    // Mod+Ctrl+Page_Down { move-window-to-workspace-down; }
    // ...

    Mod+Shift+Page_Down { move-workspace-down; }
    Mod+Shift+Page_Up   { move-workspace-up; }
    Mod+Shift+U         { move-workspace-down; }
    Mod+Shift+I         { move-workspace-up; }

    // You can bind mouse wheel scroll ticks using the following syntax.
    // These binds will change direction based on the natural-scroll setting.
    //
    // To avoid scrolling through workspaces really fast, you can use
    // the cooldown-ms property. The bind will be rate-limited to this value.
    // You can set a cooldown on any bind, but it's most useful for the wheel.
    Mod+WheelScrollDown      cooldown-ms=150 { focus-workspace-down; }
    Mod+WheelScrollUp        cooldown-ms=150 { focus-workspace-up; }
    Mod+Ctrl+WheelScrollDown cooldown-ms=150 { move-column-to-workspace-down; }
    Mod+Ctrl+WheelScrollUp   cooldown-ms=150 { move-column-to-workspace-up; }

    Mod+WheelScrollRight      { focus-column-right; }
    Mod+WheelScrollLeft       { focus-column-left; }
    Mod+Ctrl+WheelScrollRight { move-column-right; }
    Mod+Ctrl+WheelScrollLeft  { move-column-left; }

    // Usually scrolling up and down with Shift in applications results in
    // horizontal scrolling; these binds replicate that.
    Mod+Shift+WheelScrollDown      { focus-column-right; }
    Mod+Shift+WheelScrollUp        { focus-column-left; }
    Mod+Ctrl+Shift+WheelScrollDown { move-column-right; }
    Mod+Ctrl+Shift+WheelScrollUp   { move-column-left; }

    // Similarly, you can bind touchpad scroll "ticks".
    // Touchpad scrolling is continuous, so for these binds it is split into
    // discrete intervals.
    // These binds are also affected by touchpad's natural-scroll, so these
    // example binds are "inverted", since we have natural-scroll enabled for
    // touchpads by default.
    // Mod+TouchpadScrollDown { spawn-sh "wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.02+"; }
    // Mod+TouchpadScrollUp   { spawn-sh "wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.02-"; }

    // You can refer to workspaces by index. However, keep in mind that
    // niri is a dynamic workspace system, so these commands are kind of
    // "best effort". Trying to refer to a workspace index bigger than
    // the current workspace count will instead refer to the bottommost
    // (empty) workspace.
    //
    // For example, with 2 workspaces + 1 empty, indices 3, 4, 5 and so on
    // will all refer to the 3rd workspace.
    Mod+1 { focus-workspace 1; }
    Super+Ctrl+Alt+Shift+A { focus-workspace 1; }
    Mod+2 { focus-workspace 2; }
    Super+Ctrl+Alt+Shift+S { focus-workspace 2; }
    Mod+3 { focus-workspace 3; }
    Super+Ctrl+Alt+Shift+D { focus-workspace 3; }
    Mod+4 { focus-workspace 4; }
    Super+Ctrl+Alt+Shift+F { focus-workspace 4; }
    Mod+5 { focus-workspace 5; }
    Super+Ctrl+Alt+Shift+J { focus-workspace 5; }
    Mod+6 { focus-workspace 6; }
    Super+Ctrl+Alt+Shift+K { focus-workspace 6; }
    Mod+7 { focus-workspace 7; }
    Super+Ctrl+Alt+Shift+L { focus-workspace 7; }
    Mod+8 { focus-workspace 8; }
    Mod+9 { focus-workspace 9; }
    Mod+Ctrl+1 { move-column-to-workspace 1; }
    Mod+Ctrl+2 { move-column-to-workspace 2; }
    Mod+Ctrl+3 { move-column-to-workspace 3; }
    Mod+Ctrl+4 { move-column-to-workspace 4; }
    Mod+Ctrl+5 { move-column-to-workspace 5; }
    Mod+Ctrl+6 { move-column-to-workspace 6; }
    Mod+Ctrl+7 { move-column-to-workspace 7; }
    Mod+Ctrl+8 { move-column-to-workspace 8; }
    Mod+Ctrl+9 { move-column-to-workspace 9; }

    // Alternatively, there are commands to move just a single window:
    // Mod+Ctrl+1 { move-window-to-workspace 1; }

    // Switches focus between the current and the previous workspace.
    // Mod+Tab { focus-workspace-previous; }

    // The following binds move the focused window in and out of a column.
    // If the window is alone, they will consume it into the nearby column to the side.
    // If the window is already in a column, they will expel it out.
    Mod+BracketLeft  { consume-or-expel-window-left; }
    Mod+BracketRight { consume-or-expel-window-right; }

    // Consume one window from the right to the bottom of the focused column.
    Mod+Comma  { consume-window-into-column; }
    // Expel the bottom window from the focused column to the right.
    Mod+Period { expel-window-from-column; }

    Mod+R { switch-preset-column-width; }
    // Cycling through the presets in reverse order is also possible.
    // Mod+R { switch-preset-column-width-back; }
    Mod+Shift+R { switch-preset-window-height; }
    Mod+Ctrl+R { reset-window-height; }
    Mod+F { maximize-column; }
    // Mod+Shift+F { fullscreen-window; }

    // Expand the focused column to space not taken up by other fully visible columns.
    // Makes the column "fill the rest of the space".
    Mod+Ctrl+F { expand-column-to-available-width; }

    Mod+C { center-column; }

    // Center all fully visible columns on screen.
    Mod+Ctrl+C { center-visible-columns; }

    // Finer width adjustments.
    // This command can also:
    // * set width in pixels: "1000"
    // * adjust width in pixels: "-5" or "+5"
    // * set width as a percentage of screen width: "25%"
    // * adjust width as a percentage of screen width: "-10%" or "+10%"
    // Pixel sizes use logical, or scaled, pixels. I.e. on an output with scale 2.0,
    // set-column-width "100" will make the column occupy 200 physical screen pixels.
    Mod+Minus { set-column-width "-10%"; }
    Mod+Equal { set-column-width "+10%"; }

    Mod+Shift+Minus { set-window-height "-10%"; }
    Mod+Shift+Plus { set-window-height "+10%"; }

    // Move the focused window between the floating and the tiling layout.
    Mod+V       { toggle-window-floating; }
    Mod+Shift+V { switch-focus-between-floating-and-tiling; }

    // Toggle tabbed column display mode.
    // Windows in this column will appear as vertical tabs,
    // rather than stacked on top of each other.
    Mod+Q { toggle-column-tabbed-display; }

    // Actions to switch layouts.
    // Note: if you uncomment these, make sure you do NOT have
    // a matching layout switch hotkey configured in xkb options above.
    // Having both at once on the same hotkey will break the switching,
    // since it will switch twice upon pressing the hotkey (once by xkb, once by niri).
    // Mod+Space       { switch-layout "next"; }
    // Mod+Shift+Space { switch-layout "prev"; }

    Print { screenshot; }
    Super+Ctrl+Alt+Shift+Q { screenshot; }
    Ctrl+Print { screenshot-screen; }
    Alt+Print { screenshot-window; }

    // Applications such as remote-desktop clients and software KVM switches may
    // request that niri stops processing the keyboard shortcuts defined here
    // so they may, for example, forward the key presses as-is to a remote machine.
    // It's a good idea to bind an escape hatch to toggle the inhibitor,
    // so a buggy application can't hold your session hostage.
    //
    // The allow-inhibiting=false property can be applied to other binds as well,
    // which ensures niri always processes them, even when an inhibitor is active.
    // Mod+Escape allow-inhibiting=false { toggle-keyboard-shortcuts-inhibit; }
    Mod+Escape hotkey-overlay-title="Lock screen" { spawn "loginctl" "lock-session"; }
    XF86PowerOff { spawn "loginctl" "lock-session"; }


    // The quit action will show a confirmation dialog to avoid accidental exits.
    // Mod+Shift+E { quit; }
    Ctrl+Alt+Delete { quit; }

    // Powers off the monitors. To turn them back on, do any input like
    // moving the mouse or pressing any other key.
    Mod+Shift+P { power-off-monitors; }
}
input {

  focus-follows-mouse

    keyboard {
        xkb {
          options "ctrl:nocaps"
            // You can set rules, model, layout, variant and options.
            // For more information, see xkeyboard-config(7).

            // For example:
            // layout "us,ru"
            // options "grp:win_space_toggle,compose:ralt,ctrl:nocaps"

            // If this section is empty, niri will fetch xkb settings
            // from org.freedesktop.locale1. You can control these using
            // localectl set-x11-keymap.
        }

        // Enable numlock on startup, omitting this setting disables it.
        numlock
    }

    // Next sections include libinput settings.
    // Omitting settings disables them, or leaves them at their default values.
    // All commented-out settings here are examples, not defaults.
    touchpad {
        // off
        tap
        dwt
        // dwtp
        // drag false
        // drag-lock
        // natural-scroll
        accel-speed 0.0
        scroll-factor 0.2
        accel-profile "flat"
        // scroll-method "two-finger"
        // disabled-on-external-mouse
      	click-method "clickfinger"
    }

    mouse {
        // off
        // natural-scroll
        // accel-speed 0.2
        // accel-profile "flat"
        // scroll-method "no-scroll"
    }

    trackpoint {
        // off
        // natural-scroll
        // accel-speed 0.2
        // accel-profile "flat"
        // scroll-method "on-button-down"
        // scroll-button 273
        // scroll-button-lock
        // middle-emulation
    }

    // Uncomment this to make the mouse warp to the center of newly focused windows.
    // warp-mouse-to-focus

    // Focus windows and outputs automatically when moving the mouse into them.
    // Setting max-scroll-amount="0%" makes it work only on windows already fully on screen.
    // focus-follows-mouse max-scroll-amount="0%"
}

// spawn-at-startup "waybar"
// spawn-at-startup "darkman run"

// To run a shell command (with variables, pipes, etc.), use spawn-sh-at-startup:
// spawn-sh-at-startup "qs -c ~/source/qs/MyAwesomeShell"

spawn-at-startup "swaync"

environment {
  QT_QPA_PLATFORM "wayland"
  ELECTRON_OZONE_PLATFORM_HINT "auto"
  EDITOR "nvim"
  MOZ_ENABLE_WAYLAND "1"
}

cursor {
  xcursor-theme "BreezeX-RosePine-Linux"
}

// Uncomment this line to ask the clients to omit their client-side decorations if possible.
// If the client will specifically ask for CSD, the request will be honored.
// Additionally, clients will be informed that they are tiled, removing some client-side rounded corners.
// This option will also fix border/focus ring drawing behind some semitransparent windows.
// After enabling or disabling this, you need to restart the apps for this to take effect.
prefer-no-csd

// You can change the path where screenshots are saved.
// A ~ at the front will be expanded to the home directory.
// The path is formatted with strftime(3) to give you the screenshot date and time.
screenshot-path "~/Pictures/Screenshots/Screenshot from %Y-%m-%d %H-%M-%S.png"

hotkey-overlay {
  skip-at-startup
}

overview {
  backdrop-color "#44415a"

  workspace-shadow {
    color "#2321368a"
  }
}

gestures {
  hot-corners {
    off
  }
}
output "eDP-1" {
    mode "2880x1920"
    scale 2
    transform "normal"
}

output "LG Electronics LG HDR 4K 301MAYYGR218" {
  scale 1.5
}


window-rule {
  match is-focused=false

  opacity 0.96
}

window-rule {
  match title="^(file_progress)$"
  match title="^(confirm)$"
  match title="^(dialog)$"
  match title="^(download)$"
  match title="^(notification )$"
  match title="^(error)$"
  match title="^(splash)$"
  match title="^(nwg-look)$"
  match title="^(confirmreset)$"
  match title="^(Delete profile)$"
  match title="^File Operation Progress$"
  match title="^Confirm to replace files$"
  match title="^KDE Connect URL handler$"
  match title="^(Open File)(.*)$"
  match title="^(Select a File)(.*)$"
  match title="^(Choose wallpaper)(.*)$"
  match title="^(Open Folder)(.*)$"
  match title="^(Save As)(.*)$"
  match title="^(Library)(.*)$"
  match title="^(File Upload)(.*)$"
  match title="^(hyprland-share-picker)$"
  match title="^(.*)-Google$"
  match title="^(.*)System Update$"
  
  match app-id="^xdm-app$"
  match app-id="^org.qbittorrent.qBittorrent$"
  match app-id="^org.pulseaudio.pavucontrol$"
  match app-id="^btop$"
  match app-id="^Impala$"
  match app-id="^Wiremix$"
  
  open-floating true
}

window-rule {
  match title="^(.*)is sharing your screen."

  block-out-from "screencast"
  default-floating-position x=5 y=5 relative-to="bottom"
  open-floating true

  border {
    off
  }
}

window-rule {
  match app-id="chromium$" title="^Picture-in-Picture$"
  match app-id="chromium$" title="^Meet(.*)$"
  match app-id="chromium$" title="^Brennan Dunn <>(.*)Chat$"

  block-out-from "screencast"

  open-floating true

  default-floating-position x=20 y=20 relative-to="bottom-right"
  default-column-width { fixed 280; }
  default-window-height { fixed 170; }

  border {
    off
  }
}

layer-rule {
  match namespace="^sway$"

  block-out-from "screencast"
}
// window-rule {
//   geometry-corner-radius 6
//   clip-to-geometry true
// }

layout {
    gaps 10
    center-focused-column "never"

    preset-column-widths {
        // proportion sets the width as a fraction of the output width, taking gaps into account.
        // for example, you can perfectly fit four windows sized "proportion 0.25" on an output.
        // the default preset widths are 1/3, 1/2 and 2/3 of the output.
        proportion 0.33333
        proportion 0.5
        proportion 0.66667
    }

    focus-ring {
        off
    }

    border {
        width 3
        urgent-color "#9b0000"
        active-gradient from="rgba(235, 188, 186, 1.0)" to="rgba(49, 116, 143, 1.0)" angle=45 in="oklch increasing hue"
        inactive-gradient from="rgba(235, 188, 186, 0.3)" to="rgba(49, 116, 143, 0.3)" angle=45 in="oklch increasing hue"
    }

    shadow {
    }

    // shadow {
    //   on
    //   softness 5
    //   spread 1
    //   draw-behind-window true
    //   offset x=0 y=0
    //   color "#908caaa4"
    // }

    struts {
    }
}

